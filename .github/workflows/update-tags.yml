name: Update Tags

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  Update-Tags:
    runs-on: ubuntu-latest
    outputs:
      major_tag: ${{ steps.update_tags.outputs.major_tag }}
      minor_tag: ${{ steps.update_tags.outputs.minor_tag }}
      patch_tag: ${{ steps.update_tags.outputs.patch_tag }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup uv
        uses: astral-sh/setup-uv@v6

      - name: Update Package & Action Major/Minor/Patch Tags
        id: update_tags
        run: |
          tag=$(uv run --with AutoGitSemVer python -m AutoGitSemVer.EntryPoint . --no-branch-name --no-metadata --quiet)
          echo $tag
          if [[ ! "$tag" =~ ^([^0-9]*)([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
              echo "Invalid semantic version tag: $tag" >&2
              exit 1
          fi
          prefix="v"
          major="${BASH_REMATCH[2]}"
          minor="${BASH_REMATCH[3]}"
          patch="${BASH_REMATCH[4]}"

          # create new tags
          major_tag="${prefix}${major}"
          minor_tag="${prefix}${major}.${minor}"
          patch_tag="${prefix}${major}.${minor}.${patch}"

          # apply tags
          git tag "$major_tag" -f
          git tag "$minor_tag" -f
          git tag "$patch_tag" -f 

          # push tags
          git push --tags --force

          # set outputs for tags
          echo "major_tag=$major_tag" >> $GITHUB_OUTPUT
          echo "minor_tag=$minor_tag" >> $GITHUB_OUTPUT
          echo "patch_tag=$patch_tag" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  Build-Release:
    needs: Update-Tags
    uses: ./.github/workflows/build-release.yml
    with:
      major_tag: ${{ needs.Update-Tags.outputs.major_tag }}
      minor_tag: ${{ needs.Update-Tags.outputs.minor_tag }}
      patch_tag: ${{ needs.Update-Tags.outputs.patch_tag }}
